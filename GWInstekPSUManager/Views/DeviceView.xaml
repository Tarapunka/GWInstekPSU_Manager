<UserControl x:Class="GWInstekPSUManager.Views.DeviceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GWInstekPSUManager.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             xmlns:vm="clr-namespace:GWInstekPSUManager.ViewModels"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d" d:DesignWidth="800" Background="White" d:DesignHeight="630">
    <!-- Основной контейнер -->
    <GroupBox Header="GGG"  VerticalAlignment="Top">

        <StackPanel VerticalAlignment="Top">

            <!-- Статус устройства -->
            <TextBlock Text="{Binding StatusMessage}" 
                       HorizontalAlignment="Center"
                       FontSize="14"
                       Margin="5"/>

            <!-- Настройка COM-порта -->

            <!-- Список каналов -->
            <GroupBox Header="Channel Management" Margin="5">
                <StackPanel Orientation="Vertical">
                    <StackPanel Orientation="Horizontal" Margin="5">
                        <Button Content="Add Channel" 
                                Command="{Binding AddChannelCommand}" 
                                Padding="10 5" Margin="2 5"/>

                        <Button Content="Remove Channel"
                                Command="{Binding RemoveChannelCommand}" 
                                Padding="10 5" Margin="2 5"/>

                        <Button Content="ON/OFF"                                
                                Command="{Binding TurnChannelCommand}" 
                                Padding="10 5" Margin="2 5"/>
                    </StackPanel>

                    <!-- Горизонтальный список каналов -->
                    <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled" Margin="0 10 0 0">
                        <ListBox ItemsSource="{Binding Channels}" 
                     SelectedItem="{Binding SelectedChannel}"
                     BorderThickness="0">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Border x:Name="ChannelBorder" 
                                BorderBrush="LightGray" BorderThickness="1" 
                                Background="White" CornerRadius="5" 
                                Margin="2" Padding="5">
                                        <StackPanel>
                                            <TextBlock Text="{Binding ChannelNumber}" 
                                                       FontSize="14" FontWeight="Bold"
                                                       HorizontalAlignment="Center"
                                                       VerticalAlignment="Center"/>
                                        </StackPanel>
                                    </Border>
                                </DataTemplate>
                            </ListBox.ItemTemplate>

                            <!-- Стиль для выделения выбранного канала -->
                            <ListBox.ItemContainerStyle>
                                <Style TargetType="ListBoxItem">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="ListBoxItem">
                                                <Border x:Name="ItemBorder" 
                                            BorderBrush="Transparent" BorderThickness="1" 
                                            Background="White" CornerRadius="5" 
                                            Margin="5" Padding="10">
                                                    <ContentPresenter/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <!-- Триггер для выделения при выборе -->
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter TargetName="ItemBorder" Property="Background" Value="#E0F7FA"/>
                                                        <!-- Светло-голубой фон -->
                                                        <Setter TargetName="ItemBorder" Property="BorderBrush" Value="#00ACC1"/>
                                                        <!-- Голубая рамка -->
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.ItemContainerStyle>
                        </ListBox>
                    </ScrollViewer>
                </StackPanel>
            </GroupBox>
            <StackPanel Orientation="Horizontal">
                <GroupBox Header="Channel Settings">
                    <StackPanel>

                        <!--Limit parameters -->
                        <Border  BorderThickness="2" CornerRadius="5" Margin="10">

                            <StackPanel Orientation="Vertical" Grid.Column="2" Grid.Row="0">
                                <TextBlock Text="Test settings" HorizontalAlignment="Right" Foreground="#FFC4C4C4" Margin="5"/>
                                <DockPanel>

                                    <TextBlock Text="Vset (V):" VerticalAlignment="Center" Margin="5" Foreground="#FFC4C4C4" DockPanel.Dock="Left" HorizontalAlignment="Left"/>

                                    <xctk:DoubleUpDown Value="{Binding SelectedChannel.Vset, UpdateSourceTrigger=PropertyChanged}"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Right"
                                                       Width="100"
                                                       Margin="5"
                                                       Background="#FF3F3F3F"
                                                       Foreground="#FFFFFFFF"
                                                       BorderBrush="#FF575757" 
                                                       Maximum="35" 
                                                       Minimum="0" 
                                                       Increment="0.01">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="ValueChanged">
                                                <i:InvokeCommandAction 
                                                    Command="{Binding SetVsetCommand}"
                                                    CommandParameter="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type xctk:DoubleUpDown}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </xctk:DoubleUpDown>
                                </DockPanel>

                                <DockPanel>
                                    <TextBlock Text="Iset (A):" VerticalAlignment="Center" Margin="5" Foreground="#FFC4C4C4" />
                                    <xctk:DoubleUpDown Value="{Binding SelectedChannel.Iset, UpdateSourceTrigger=PropertyChanged}"
                                                       VerticalAlignment="Center"
                                                       HorizontalAlignment="Right"
                                                       Width="100"
                                                       Margin="5"
                                                       Background="#FF3F3F3F"
                                                       Foreground="#FFFFFFFF"
                                                       BorderBrush="#FF575757" 
                                                       Maximum="35" 
                                                       Minimum="0" 
                                                       Increment="0.01">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="ValueChanged">
                                                <i:InvokeCommandAction 
                                                    Command="{Binding SetIsetCommand}"
                                                    CommandParameter="{Binding Value, RelativeSource={RelativeSource AncestorType={x:Type xctk:DoubleUpDown}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </xctk:DoubleUpDown>
                                </DockPanel>
                                <DockPanel>
                                    <TextBlock Text="Cut of Voltage (V):" VerticalAlignment="Center" Margin="5" Foreground="#FFC4C4C4" />
                                    <xctk:DoubleUpDown Value="{Binding SelectedChannel.VoltageLimit, UpdateSourceTrigger=PropertyChanged}" 
                        VerticalAlignment="Center" 
                        HorizontalAlignment="Right" 
                        Width="100" 
                        Margin="5" 
                        Background="#FF3F3F3F" 
                        Foreground="#FFFFFFFF" 
                        BorderBrush="#FF575757" Maximum="35" Minimum="0" Increment="0.01" />
                                </DockPanel>
                                <DockPanel>
                                    <TextBlock Text="Cut of Current (A):" VerticalAlignment="Center" Margin="5" Foreground="#FFC4C4C4" DockPanel.Dock="Left"/>
                                    <xctk:DoubleUpDown Value="{Binding SelectedChannel.CurrentLimit, UpdateSourceTrigger=PropertyChanged}" 
                        VerticalAlignment="Center" 
                        HorizontalAlignment="Right" 
                        Width="100" 
                        Margin="5" 
                        Background="#FF3F3F3F" 
                        Foreground="#FFFFFFFF" 
                        BorderBrush="#FF575757" Maximum="35" Minimum="0" Increment="0.01" />

                                </DockPanel>

                                <CheckBox Content="Record logs"
                      IsChecked="{Binding IsRecordLogs, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      Foreground="#FFC4C4C4"
                      Background="#FF3F3F3F"
                      BorderBrush="#FF575757" Margin="10" />
                            </StackPanel>
                        </Border>

                        <Border Grid.Row="1" Grid.Column="2" BorderBrush="#FF575757" BorderThickness="2" CornerRadius="5" Margin="10">
                            <StackPanel Grid.Column="1" Margin="5">
                                <TextBlock Text="Load mods" HorizontalAlignment="Right" Foreground="#FFC4C4C4"/>

                                <StackPanel>
                                    <Button Content="CC"
                                            Command="{Binding SetCCLoadModeCommand}"
                                            Style="{StaticResource CCButtonStyle}" />
                                    <Button Content="CV" Command="{Binding SetCVLoadModeCommand}"
                                            Style="{StaticResource CVButtonStyle}" />
                                    <Button Content="CR" Command="{Binding SetCRLoadModeCommand}"
                                            Style="{StaticResource CRButtonStyle}" />
                                    <Button Content="SERIES" Command="{Binding SetSeriesModeCommand}"
                                            Style="{StaticResource SERButtonStyle}" />
                                    <Button Content="PARALLEL" Command="{Binding SetParallelModeCommand}"
                                            Style="{StaticResource PARButtonStyle}" />

                                </StackPanel>


                            </StackPanel>

                        </Border>

                    </StackPanel>
                </GroupBox>
                <!-- Детали выбранного канала -->
                <GroupBox Header="Selected Channel Details"
                          Visibility="{Binding Channels}">
                    <ItemsControl ItemsSource="{Binding Channels}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <!-- UniformGrid автоматически создаёт равные ячейки -->
                                <UniformGrid Rows="2" Columns="2"/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>

                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <!-- Шаблон для каждого элемента (канала) -->
                                <Border BorderBrush="White" BorderThickness="1" Margin="2">
                                    <local:PowerSupplyChannelView DataContext="{Binding}"/>
                                </Border>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>

                        <!-- Заполнитель, если Channels пуст или null -->
                        <ItemsControl.Style>
                            <Style TargetType="ItemsControl">
                                <Style.Triggers>
                                    <Trigger Property="HasItems" Value="False">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <!-- Пустой Grid с серой сеткой -->
                                                    <Grid>
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="*"/>
                                                        </Grid.RowDefinitions>
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="*"/>
                                                            <ColumnDefinition Width="*"/>
                                                        </Grid.ColumnDefinitions>

                                                        <Border Grid.Row="0" Grid.Column="0" BorderBrush="LightGray" BorderThickness="1"/>
                                                        <Border Grid.Row="0" Grid.Column="1" BorderBrush="LightGray" BorderThickness="1"/>
                                                        <Border Grid.Row="1" Grid.Column="0" BorderBrush="LightGray" BorderThickness="1"/>
                                                        <Border Grid.Row="1" Grid.Column="1" BorderBrush="LightGray" BorderThickness="1"/>
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ItemsControl.Style>
                    </ItemsControl>
                </GroupBox>
            </StackPanel>
        </StackPanel>
    </GroupBox>
</UserControl>