<UserControl x:Class="GWInstekPSUManager.Views.ChannelManagerView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GWInstekPSUManager.Views"
             xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" MinWidth="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Device and Channel Selection -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Device List -->
            <GroupBox Grid.Row="0" Header="Devices">
                <ListBox ItemsSource="{Binding DeviceViewModels}"
                         SelectedItem="{Binding SelectedViewModel}"
                         DisplayMemberPath="DeviceName"/>
            </GroupBox>

            <!-- Channel List -->
            <GroupBox Grid.Row="1" Header="Channels">
                <ListBox ItemsSource="{Binding SelectedViewModel.Channels}"
                         SelectionMode="Extended"
                         SelectedItem="{Binding SelectedChannel}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox Content="{Binding ChannelNumber, StringFormat='Channel {0}'}"
                                      IsChecked="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, 
                                                          Path=IsSelected}"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </GroupBox>
        </Grid>

        <!-- Channel Management -->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Channel Monitoring -->
            <GroupBox Grid.Row="0" Header="Selected Channels">
                <ItemsControl ItemsSource="{Binding SelectedChannels}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <UniformGrid Rows="2" Columns="2"/>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>

                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="#DDD" BorderThickness="1" Margin="2">
                                <local:PowerSupplyChannelView DataContext="{Binding}"/>
                            </Border>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </GroupBox>

            <!-- Channel Controls -->
            <StackPanel Grid.Row="1" Orientation="Vertical" Margin="0 10 0 0">
                <StackPanel Orientation="Horizontal">
                    <Button Content="Add to Group" Command="{Binding AddChannelToGroupCommand}"
                            ToolTip="Add selected channels to current group"/>
                    <Button Content="Remove from Group" Command="{Binding RemoveChannelFromGroupCommand}"
                            ToolTip="Remove selected channels from current group"/>
                    <Button Content="Toggle Power" Command="{Binding ToggleSelectedChannelsCommand}"
                            ToolTip="Toggle power for selected channels"/>
                </StackPanel>

                <StackPanel Orientation="Horizontal" Margin="0 10 0 0">
                    <CheckBox Content="Series Mode" IsChecked="{Binding IsSeriesMode}" Margin="5"/>
                    <CheckBox Content="Parallel Mode" IsChecked="{Binding IsParallelMode}" Margin="5"/>
                </StackPanel>

                <Grid Margin="0 10 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Voltage:" VerticalAlignment="Center" Margin="5"/>
                    <xctk:DoubleUpDown Grid.Column="1" 
                                       Value="{Binding SelectedChannels[0].Vset, UpdateSourceTrigger=PropertyChanged}"
                                       Maximum="35" Minimum="0" Increment="0.01"/>
                    <Button Grid.Column="2" Content="Apply" 
                            Command="{Binding SetVoltageForSelectedCommand}"
                            CommandParameter="{Binding SelectedChannels[0].Vset}"
                            Margin="5 0 0 0"/>
                </Grid>

                <Grid Margin="0 5 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Current:" VerticalAlignment="Center" Margin="5"/>
                    <xctk:DoubleUpDown Grid.Column="1" 
                                       Value="{Binding SelectedChannels[0].Iset, UpdateSourceTrigger=PropertyChanged}"
                                       Maximum="3" Minimum="0" Increment="0.01"/>
                    <Button Grid.Column="2" Content="Apply" 
                            Command="{Binding SetCurrentForSelectedCommand}"
                            CommandParameter="{Binding SelectedChannels[0].Iset}"
                            Margin="5 0 0 0"/>
                    

                </Grid>
                
                <Grid Margin="0 5 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Cut off Voltage:" VerticalAlignment="Center" Margin="5"/>
                    <xctk:DoubleUpDown Grid.Column="1" 
                                       Value="{Binding SelectedChannels[0].GroupVoltageLimit, UpdateSourceTrigger=PropertyChanged}"
                                       Maximum="34" Minimum="0" Increment="0.01"/>
                    <Button Grid.Column="2" Content="Apply" 
                            Command="{Binding SetGroupVoltageLimitCommand}"
                            CommandParameter="{Binding SelectedChannels[0].GroupVoltageLimit}"
                            Margin="5 0 0 0"/>


                </Grid>
                
                <Grid Margin="0 5 0 0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Text="Cut off Current:" VerticalAlignment="Center" Margin="5"/>
                    <xctk:DoubleUpDown Grid.Column="1" 
                                       Value="{Binding SelectedChannels[0].GroupCurrentLimit, UpdateSourceTrigger=PropertyChanged}"
                                       Maximum="30" Minimum="0" Increment="0.01"/>
                    <Button Grid.Column="2" Content="Apply" 
                            Command="{Binding SetGroupCurrentLimitCommand}"
                            CommandParameter="{Binding SelectedChannels[0].GroupCurrentLimit}"
                            Margin="5 0 0 0"/>
                </Grid>
                



                <StackPanel Orientation="Horizontal" Margin="0 10 0 0" HorizontalAlignment="Center">
                    <Button Content="CC Mode" Command="{Binding SetCCLoadModeCommand}"
                            Style="{StaticResource CCButtonStyle}" Width="80"/>
                    <Button Content="CV Mode" Command="{Binding SetCVLoadModeCommand}"
                            Style="{StaticResource CVButtonStyle}" Width="80"/>
                    <Button Content="CR Mode" Command="{Binding SetCRLoadModeCommand}"
                            Style="{StaticResource CRButtonStyle}" Width="80"/>
                </StackPanel>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>